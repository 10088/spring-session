buildscript {
	ext {
		releaseBuild = version.endsWith('RELEASE')
		snapshotBuild = version.endsWith('SNAPSHOT')
		milestoneBuild = !(releaseBuild || snapshotBuild)

		springBootVersion = '2.2.13.RELEASE'
	}

	repositories {
		gradlePluginPortal()
		maven { url 'https://repo.spring.io/plugins-release/' }
	}

	dependencies {
		classpath 'io.spring.gradle:spring-build-conventions:0.0.27.1.RELEASE'
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
	}
}

apply plugin: 'io.spring.convention.root'

group = 'org.springframework.session'
description = 'Spring Session'

subprojects {
	apply plugin: 'io.spring.javaformat'

	plugins.withType(JavaPlugin) {
		sourceCompatibility = JavaVersion.VERSION_1_8
	}

	tasks.withType(Test) {
		useJUnitPlatform()
	}
}

if (project.hasProperty('artifactoryUsername')) {
    allprojects { project ->
        project.repositories { repos ->
            all { repo ->
                if (!repo.url.toString().startsWith("https://repo.spring.io/")) {
                    return;
                }
                repo.credentials {
                    username = artifactoryUsername
                    password = artifactoryPassword
                }
            }
        }
    }
}
